<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_58872_needit.ListUtil</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>This Script Include is created in order to work and manage the glide_list type of fields in forms.</description>
        <name>ListUtil</name>
        <script><![CDATA[var ListUtil = Class.create();
ListUtil.prototype = {

      initialize: function(list) {

              this.debug = gs.getProperty('debug.ListUtil') == 'true';

              if (JSUtil.notNil(list)) {
                      this._list = list.split(',');
              } else {
                      this._list = [];
              }
      },

/*
* isInList - check if an id is in the list
*
* @param id - sys_id to look for
* @return - boolean
* @uses - this._list
*
*/
      isInList : function(id) {

              var i = this._getIndex(id);

              this._debug('isInList(' + i + '): looking for ' + id + ' in ' + this.getList());
              return (i > -1);
      },

/*
* addToList - add an id to the list
*
* @param id - sys_id of the id to add
* @return - NA
* @uses - this._list
*
*/
      addToList : function(id) {

              if (!this.isInList(id))
                      this._list.push(id);
      },
/*
* removeFromList - remove a id from the list
*
* @param id - sys_id to remove
* @return - NA
* @uses - this._list
*
*/
      removeFromList : function(id) {

              var index = this._getIndex(id);

              if (index > -1)
                      this._list.splice(index, 1);
      },

/*
* getList - display the list as CSV
*
* @param - NA
* @return - string of CSV
* @uses - this._list
*
*/
      getList : function() {

              return this._list.join(',');
      },

/*
* _getIndex - return the index of an element in list
*
* @param id - id to look for
* @return - position of id in list (0..n/-1 = not found)
* @uses - this._list
*
*/
      _getIndex : function(id) {

              for (var i = 0; i < this._list.length; i++) {

                      if (this._list[i] == id)
                              return i;
              }

              return -1;
      },
	
//_getLength() method will return the length of the current List
	
		getLength : function()
		{
			return (this._list.length);
		},
/*
* _debug - print a message to the debug log
*
* @param s - string to print
* @return - NA
* @usrs - this._debug
*
*/
      _debug : function(s) {

              if (this.debug)
                      gs.print('>>>DEBUG: ListUtil: ' + s);
      },

      type: 'ListUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-17 09:44:24</sys_created_on>
        <sys_id>dc441c164784b11098f58977536d43ad</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>ListUtil</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_dc441c164784b11098f58977536d43ad</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-17 09:49:23</sys_updated_on>
    </sys_script_include>
</record_update>
